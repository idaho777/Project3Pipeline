; Addresses for I/O
.NAME   IOBASE      = 0xF0000000

.NAME	OFSHEX      = 0x00000000
.NAME	OFSLEDR     = 0x00000004
.NAME	OFSLEDG     = 0x00000008
.NAME	OFSKEY      = 0x00000010
.NAME	OFSSW       = 0x00000014
.NAME	OFSTIMERCNT = 0x00000020
.NAME	OFSTIMERLMT = 0x00000024

.NAME	OFSKEYCTL   = 0x00000110
.NAME	OFSSWCTL    = 0x00000114
.NAME	OFSTIMERCTL = 0x00000120

.NAME   KEY0MASK    = 0x0001
.NAME   KEY1MASK    = 0x0002
.NAME   KEY2MASK    = 0x0004
.NAME   KEY3MASK    = 0x0008
.NAME   HEX0MASK    = 0x000F
.NAME   HEX1MASK    = 0x00F0
.NAME   HEX2MASK    = 0x0F00
.NAME   HEX3MASK    = 0xF000
.NAME   SWITCH0MASK = 0x0001
.NAME   SWITCH1MASK = 0x0002
.NAME   SWITCH2MASK = 0x0004
.NAME   SWITCH3MASK = 0x0008
.NAME   SWITCH4MASK = 0x0010
.NAME   SWITCH5MASK = 0x0020
.NAME   SWITCH6MASK = 0x0040
.NAME   SWITCH7MASK = 0x0080
.NAME   SWITCH8MASK = 0x0100
.NAME   SWITCH9MASK = 0x0200

.NAME	STACKTOP    = 8191
.NAME   READYMASK   = 0x00000001
.NAME   OVERUNMASK  = 0x00000004
.NAME   INTAMASK    = 0x00000080
.NAME   SECOND      = 0x000003E8
.NAME   HSECOND     = 0x000001F4
.NAME   HEX60       = 0x0000003c
.NAME   HEX59       = 0x0000003b
.NAME   HEX09        = 0x0000009
.NAME   HEX06        = 0x0000006

	; This should never be executed
	.ORIG 0
	bt			t0,t0,AtZero
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
	addi		s1,s1,0x1
AtZero:
	; Turn on LEDR, display 0xBAD on HEX
	mvhi	gp,IOBASE
	andi	s0,s0,0
	not		t0,s0
	sw		t0,OFSLEDR(gp)
	addi	t0,s0,0xBAD
	sw		t0,OFSHEX(gp)
	bt		t0,t0,AtZero
	
	; Now the actual code
	.ORIG 0x40
    F       s0, s0, s0          ; init zero register
    ADD     gp, s0, s0          ; set io base
	MVHI	gp, IOBASE
BeginState:
    SW      s0, OFSHEX(gp)
    SW      s0, OFSLEDR(gp)
    SW      s0, OFSLEDG(gp)

    LW      t0, OFSKEYCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, BeginState
    LW      t0, OFSKEY(gp)
    ANDI    t1, t0, KEY1MASK
    BNEZ    t1, BeginState      ; assume key on is 0
    F       s1, s1, s1
    F       s2, s2, s2
    F       a0, a0, a0
    BR      SetSecondState
    
SetSecondState:
    LW      s1, OFSSW(gp)
    ANDI    s1, s1, 0x00FF
    ANDI    t0, s1, 0x000F
    ADDI    t1, s0, 0x0009
    BLTE    t0, t1, SSSDontMakeZero1
    ANDI    s1, s1, 0x00F0
    ORI     s1, s1, 0x0009
SSSDontMakeZero1:
    ANDI    t0, s1, 0x00F0
    ADDI    t1, s0, 0x0050
    BLTE    t0, t1, SSSDontMakeZero2
    ANDI    s1, s1, 0x000F
    ORI     s1, s1, 0x0050
SSSDontMakeZero2:    
    ANDI    a0, a0, 0xFF00
    OR      a0, a0, s1
    SW      a0, OFSHEX(gp)

    LW      t0, OFSKEYCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, SetSecondState
    LW      t0, OFSKEY(gp)
    ANDI    t1, t0, KEY0MASK
    BEQZ    t1, BeginState      ; assume key on is 0
    ANDI    t1, t0, KEY1MASK
    BEQZ    t1, SetMinuteState      ; assume key on is 0
    ANDI    t1, t0, KEY2MASK
    BNEZ    t1, SetSecondState      ; assume key on is 0
    BR      RunningStateInit

SetMinuteState:
    LW      s2, OFSSW(gp)
    ADD     s2, s2, s2      ; x2
    ADD     s2, s2, s2      ; x4
    ADD     s2, s2, s2      ; x8
    ADD     s2, s2, s2      ; x16
    ADD     s2, s2, s2      ; x32
    ADD     s2, s2, s2      ; x64
    ADD     s2, s2, s2      ; x128
    ADD     s2, s2, s2      ; x256

    ANDI    s2, s2, 0xFF00
    ANDI    t0, s2, 0x0F00
    ADDI    t1, s0, 0x0900
    BLTE    t0, t1, SMSDontMakeZero1
    ANDI    s2, s2, 0xF000
    ORI     s2, s2, 0x0900
SMSDontMakeZero1:
    ANDI    t0, s2, 0xF000
    ADDI    t1, s0, 0x5000
    BLTE    t0, t1, SMSDontMakeZero2
    ANDI    s2, s2, 0x0F00
    ORI     s2, s2, 0x5000
SMSDontMakeZero2:    
    ANDI    a0, a0, 0x00FF
    OR      a0, a0, s2
    SW      a0, OFSHEX(gp)
    
    LW      t0, OFSKEYCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, SetMinuteState
    LW      t0, OFSKEY(gp)
    ANDI    t1, t0, KEY0MASK
    BEQZ    t1, BeginState      ; assume key on is 0
    ANDI    t1, t0, KEY1MASK
    BEQZ    t1, SetSecondState      ; assume key on is 0
    ANDI    t1, t0, KEY2MASK
    BNEZ    t1, SetMinuteState      ; assume key on is 0
    BR      RunningStateInit
    
RunningStateInit:
    F       s1, s1, s1
    F       s2, s2, s2
    SW      s0, OFSTIMERCNT(gp)
    ADDI    t0, s0, SECOND
    SW      t0, OFSTIMERLMT(gp)
RunningState:
    SW      s1, OFSTIMERCNT(gp)
RunningStateLoop:
    SW      s2, OFSHEX(gp)
    BGTE    s2, a0, FlashingState

    LW      t0, OFSKEYCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, RunningStateSkipKeyChecks
    LW      t0, OFSKEY(gp)
    ANDI    t1, t0, KEY0MASK
    BEQZ    t1, BeginState      ; assume key on is 0
    ANDI    t1, t0, KEY2MASK
    BEQZ    t1, StoppedStateInit      ; assume key on is 0
RunningStateSkipKeyChecks:
    LW      t0, OFSTIMERCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, RunningStateLoop
    LW      t0, OFSTIMERCNT(gp)     ; set timer ready bit to zero
    ADDI    s2, s2, 1

    
    ANDI    t0, s2, 0x000F
    ADDI    t1, s0, 0x0009
    BLTE    t0, t1, RSSkipAddRound1
    ANDI    s2, s2, 0xFFF0
    ADDI    s2, s2, 0x0010
RSSkipAddRound1:

    ANDI    t0, s2, 0x00F0
    ADDI    t1, s0, 0x0050
    BLTE    t0, t1, RSSkipAddRound2
    ANDI    s2, s2, 0xFF0F
    ADDI    s2, s2, 0x0100
RSSkipAddRound2:

    ANDI    t0, s2, 0x0F00
    ADDI    t1, s0, 0x0900
    BLTE    t0, t1, RSSkipAddRound3
    ANDI    s2, s2, 0xF0FF
    ADDI    s2, s2, 0x1000
RSSkipAddRound3:


    BR      RunningStateLoop
    
StoppedStateInit:
    LW      t0, OFSTIMERCTL(gp)
    ANDI    t0, t0, READYMASK
    LW      s1, OFSTIMERCNT(gp)     ; set timer ready bit to zero
    BEQZ    t0, StoppedState
    ADDI    s2, s2, 1


ANDI    t0, s2, 0x000F
    ADDI    t1, s0, 0x0009
    BLTE    t0, t1, SSSkipAddRound1
    ANDI    s2, s2, 0xFFF0
    ADDI    s2, s2, 0x0010
SSSkipAddRound1:

    ANDI    t0, s2, 0x00F0
    ADDI    t1, s0, 0x0050
    BLTE    t0, t1, SSSkipAddRound2
    ANDI    s2, s2, 0xFF0F
    ADDI    s2, s2, 0x0100
SSSkipAddRound2:

    ANDI    t0, s2, 0x0F00
    ADDI    t1, s0, 0x0900
    BLTE    t0, t1, SSSkipAddRound3
    ANDI    s2, s2, 0xF0FF
    ADDI    s2, s2, 0x1000
SSSkipAddRound3:


    
StoppedState:
    LW      t0, OFSKEYCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, StoppedStateSkipKeyChecks
    LW      t0, OFSKEY(gp)
    ANDI    t1, t0, KEY0MASK
    BEQZ    t1, BeginState      ; assume key on is 0
    ANDI    t1, t0, KEY2MASK
    BEQZ    t1, RunningState      ; assume key on is 0
StoppedStateSkipKeyChecks:
    BLT     s2, a0, StoppedState
    BR      FlashingState
    
FlashingState:
    F       s1, s1, s1
    ADDI    t0, s0, HSECOND
    SW      t0, OFSTIMERLMT(gp)
    SW      s0, OFSHEX(gp)
FlashingStateMain:
    SW      s0, OFSTIMERCNT(gp)
    NOT     s1, s1
FlashingStateLoop:
    SW      s1, OFSLEDR(gp)
FlashingStateResetCheck:
    LW      t0, OFSKEYCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, FlashingStateNegateCheck
    LW      t0, OFSKEY(gp)
    ANDI    t1, t0, KEY0MASK
    BEQZ    t1, BeginState      ; assume key on is 0
FlashingStateNegateCheck:
    LW      t0, OFSTIMERCTL(gp)
    ANDI    t0, t0, READYMASK
    BEQZ    t0, FlashingStateLoop
    LW      t0, OFSTIMERCNT(gp)     ; set timer ready bit to zero
    BR      FlashingStateMain
    BR      BeginState
